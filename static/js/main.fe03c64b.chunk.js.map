{"version":3,"sources":["components/views/Carousel/1.png","components/views/Carousel/2.png","_actions/types.js","components/Config.js","hoc/auth.js","_actions/user_actions.js","components/utils/ImageSlider.js","components/views/LandingPage/Sections/CheckBox.js","components/views/LandingPage/Sections/RadioBox.js","components/views/LandingPage/Sections/Datas.js","components/views/LandingPage/Sections/SearchFeature.js","components/views/Carousel/Carousel.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/utils/FileUpload.js","components/views/UploadProductPage/UploadProductPage.js","components/views/DetailProductPage/Sections/ProductImage.js","components/views/DetailProductPage/Sections/ProductInfo.js","components/views/DetailProductPage/DetailProductPage.js","components/views/CartPage/Sections/UserCardBlock.js","components/utils/Paypal.js","components/views/CartPage/CartPage.js","components/views/HistoryPage/HistoryPage.js","components/App.js","serviceWorker.js","_reducers/user_reducer.js","_reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","ADD_TO_CART_USER","GET_CART_ITEMS_USER","REMOVE_CART_ITEM_USER","ON_SUCCESS_BUY_USER","USER_SERVER","hoc_auth","ComposedClass","reload","adminRoute","arguments","length","undefined","props","user","useSelector","state","dispatch","useDispatch","useEffect","request","axios","get","concat","then","response","data","type","payload","auth","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","isAuth","sent","history","push","isAdmin","stop","_x","apply","this","googleAuth","react_default","createElement","assign","ImageSlider","carousel","autoplay","images","map","image","index","key","style","padding","maxHeight","objectFit","borderRadius","margin","src","alt","Panel","Collapse","CheckBox","_useState","useState","_useState2","slicedToArray","Checked","setChecked","collapse","defaultActiveKey","header","list","value","Fragment","es_checkbox","onChange","currentIndex","indexOf","newChecked","toConsumableArray","splice","handleFilters","handleToggle","_id","checked","name","RadioBox","Value","setValue","RadioBox_Panel","es_radio","Group","event","target","price","array","continents","Search","Input","SearchFeature","SearchTerms","setSearchTerms","currentTarget","refreshFunction","placeholder","Carousel","js","autoPlay","showStatus","showThumbs","infiniteLoop","slideOne","slideTwo","Meta","Card","LandingPage","Products","setProducts","_useState3","_useState4","Skip","setSkip","_useState5","_useState6","Limit","_useState7","_useState8","PostSize","setPostSize","_useState9","_useState10","_useState11","_useState12","Filters","setFilters","getProducts","skip","limit","variables","Axios","post","success","loadMore","products","postSize","alert","renderCards","product","col","lg","md","xs","card","hoverable","cover","href","utils_ImageSlider","title","description","filters","category","newFilters","objectSpread","priceValues","parseInt","console","log","handlePrice","showFilteredResults","width","textAlign","icon","row","gutter","Sections_CheckBox","Sections_RadioBox","display","justifyContent","Sections_SearchFeature","newSearchTerm","searchTerm","height","alignItems","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","initialEmail","formik_esm","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","es_form","Item","input","prefix","color","onBlur","fontSize","border","es_button","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","confirmPassword","oneOf","lastname","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","Menu","SubMenu","ItemGroup","LeftMenu","menu","mode","userData","paddingBottom","badge","count","cart","marginRight","marginBottom","status","NavBar","visible","setVisible","position","zIndex","Sections_LeftMenu","Sections_RightMenu","drawer","placement","closable","onClose","Footer","flexDirection","FileUpload","Images","setImages","dist_es","onDrop","files","formData","FormData","append","content-type","multiple","maxSize","getRootProps","getInputProps","overflowX","newImages","onDelete","TextArea","Continents","UploadProductPage","TitleValue","setTitleValue","DescriptionValue","setDescriptionValue","PriceValue","setPriceValue","ContinentValue","setContinentValue","preventDefault","writer","maxWidth","UploadProductPage_Title","utils_FileUpload","item","ProductImage","detail","original","thumbnail","image_gallery_default","items","ProductInfo","Product","setProduct","descriptions","sold","size","addToCart","DetailProductPage","productId","match","params","Sections_ProductImage","Sections_ProductInfo","UserCardBlock","renderCartImage","paddingLeft","quantity","Paypal","_this","total","toPay","react_paypal_express_checkout_default","env","client","sandbox","production","currency","onError","onSuccess","payment","onCancel","React","Component","CartPage","Total","setTotal","ShowTotal","setShowTotal","ShowSuccess","setShowSuccess","cartItems","forEach","userCart","cartItem","productDetail","i","getCartItems","calculateTotal","cartDetail","Number","Sections_UserCardBlock","k","removeCartItem","marginTop","result","empty","Paypal_Paypal","onSuccessBuy","paymentData","transactionError","transactionCanceled","HistoryPage","App","react","fallback","NavBar_NavBar","paddingTop","minHeight","react_router","exact","path","component","Auth","LoginPage","Footer_Footer","Boolean","location","hostname","initialSatte","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","es","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","react_router_dom","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe03c64b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.7eb83a9a.png\";","module.exports = __webpack_public_path__ + \"static/media/2.8d501cd0.png\";","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\nexport const ADD_TO_CART_USER = 'add_to_cart_user';\r\nexport const GET_CART_ITEMS_USER = 'get_cart_items_user';\r\nexport const REMOVE_CART_ITEM_USER = 'remove_cart_item_user';\r\nexport const ON_SUCCESS_BUY_USER = 'on_success_buy_user';","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n","import React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (ComposedClass, reload, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n\r\n            dispatch(auth()).then(async response => {\r\n\r\n\r\n                if (await !response.payload.isAuth) {\r\n                    if (reload) {\r\n                        props.history.push('/login')\r\n                    }\r\n                } else {\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n\r\n                        props.history.push('/')\r\n                    }\r\n                    else {\r\n                        if (reload === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [dispatch, props.history, user.googleAuth])\r\n\r\n        return (\r\n            <ComposedClass {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART_USER,\r\n    GET_CART_ITEMS_USER,\r\n    REMOVE_CART_ITEM_USER,\r\n    ON_SUCCESS_BUY_USER\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit) {\r\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth() {\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser() {\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function addToCart(_id) {\r\n    const request = axios.get(`${USER_SERVER}/addToCart?productId=${_id}`)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: ADD_TO_CART_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getCartItems(cartItems, userCart) {\r\n    const request = axios.get(`/api/product/products_by_id?id=${cartItems}&type=array`)\r\n        .then(response => {\r\n\r\n\r\n            //Make CartDetail inside Redux Store \r\n            // We need to add quantity data to Product Information that come from Product Collection. \r\n\r\n            userCart.forEach(cartItem => {\r\n                response.data.forEach((productDetail, i) => {\r\n                    if (cartItem.id === productDetail._id) {\r\n                        response.data[i].quantity = cartItem.quantity;\r\n                    }\r\n                })\r\n            })\r\n\r\n            return response.data;\r\n        });\r\n\r\n    return {\r\n        type: GET_CART_ITEMS_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function removeCartItem(id) {\r\n    const request = axios.get(`/api/users/removeFromCart?_id=${id}`)\r\n        .then(response => {\r\n\r\n            response.data.cart.forEach(item => {\r\n                response.data.cartDetail.forEach((k, i) => {\r\n                    if (item.id === k._id) {\r\n                        response.data.cartDetail[i].quantity = item.quantity\r\n                    }\r\n                })\r\n            })\r\n            return response.data;\r\n        });\r\n\r\n    return {\r\n        type: REMOVE_CART_ITEM_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function onSuccessBuy(data) {\r\n\r\n    const request = axios.post(`${USER_SERVER}/successBuy`, data)\r\n        .then(response => response.data);\r\n\r\n    return {\r\n        type: ON_SUCCESS_BUY_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Carousel } from 'antd';\r\n\r\nfunction ImageSlider(props) {\r\n    return (\r\n        <div>\r\n\r\n            <Carousel autoplay>\r\n                {props.images.map((image, index) => (\r\n                    <div key={index}>\r\n                        <img style={{ padding: '10px', maxHeight: '300px', objectFit: 'cover', borderRadius: '50%', margin: '0 auto' }}\r\n                            src={`http://localhost:5000/${image}`} alt=\"productImage\" />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSlider\r\n","import React, { useState } from 'react'\r\nimport { Checkbox, Collapse } from 'antd';\r\n\r\nconst { Panel } = Collapse\r\n\r\n\r\nfunction CheckBox(props) {\r\n\r\n    const [Checked, setChecked] = useState([])\r\n\r\n    const handleToggle = (value) => {\r\n\r\n        const currentIndex = Checked.indexOf(value);\r\n        const newChecked = [...Checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n\r\n        setChecked(newChecked)\r\n        props.handleFilters(newChecked)\r\n        //update this checked information into Parent Component \r\n\r\n    }\r\n\r\n    const renderCheckboxLists = () => props.list && props.list.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n            <Checkbox\r\n                onChange={() => handleToggle(value._id)}\r\n                type=\"checkbox\"\r\n                checked={Checked.indexOf(value._id) === -1 ? false : true}\r\n            />&nbsp;&nbsp;\r\n            <span>{value.name}</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </React.Fragment>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['0']} >\r\n                <Panel header=\"Категория\" key=\"1\">\r\n                    {renderCheckboxLists()}\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React, { useState } from 'react'\r\nimport { Collapse, Radio } from 'antd';\r\nconst { Panel } = Collapse;\r\n\r\n\r\nfunction RadioBox(props) {\r\n\r\n    const [Value, setValue] = useState('0')\r\n\r\n    const renderRadioBox = () => (\r\n        props.list && props.list.map((value) => (\r\n            <Radio key={value._id} value={`${value._id}`}>{value.name}</Radio>\r\n        ))\r\n    )\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        props.handleFilters(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Collapse defaultActiveKey={['0']}>\r\n                <Panel header=\"Цена\" key=\"1\">\r\n                    <Radio.Group onChange={handleChange} value={Value}>\r\n\r\n                        {renderRadioBox()}\r\n\r\n                    </Radio.Group>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioBox\r\n","\r\nconst price = [\r\n    {\r\n        \"_id\": 0,\r\n        \"name\": \"Any\",\r\n        \"array\": []\r\n    },\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"0 до 135 ₽\",\r\n        \"array\": [0, 135]\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"135 ₽ до 200 ₽\",\r\n        \"array\": [135, 200]\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"300 ₽ до 400 ₽\",\r\n        \"array\": [300, 400]\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"400 ₽ до 500 ₽\",\r\n        \"array\": [400, 500]\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"Больше 500 ₽\",\r\n        \"array\": [500, 10000]\r\n    }\r\n]\r\n\r\n\r\n\r\nconst continents = [\r\n    // {\r\n    //     \"_id\": 1,\r\n    //     \"name\": \"Без грибов\"\r\n    // },\r\n    // {\r\n    //     \"_id\": 2,\r\n    //     \"name\": \"Без маслин\"\r\n    // },\r\n    // {\r\n    //     \"_id\": 3,\r\n    //     \"name\": \"Без лука\"\r\n    // },\r\n    // {\r\n    //     \"_id\": 4,\r\n    //     \"name\": \"Острая\"\r\n    // },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"Новинки\"\r\n    },\r\n    // {\r\n    //     \"_id\": 6,\r\n    //     \"name\": \"Хиты\"\r\n    // },\r\n    {\r\n        \"_id\": 7,\r\n        \"name\": \"Комбо\"\r\n    },\r\n    {\r\n        \"_id\": 8,\r\n        \"name\": \"Напитки\"\r\n    }\r\n]\r\n\r\n\r\nexport {\r\n    price,\r\n    continents,\r\n}","import React, { useState } from 'react'\r\nimport { Input } from 'antd';\r\n\r\nconst { Search } = Input;\r\n\r\nfunction SearchFeature(props) {\r\n\r\n    const [SearchTerms, setSearchTerms] = useState(\"\")\r\n\r\n    const onChangeSearch = (event) => {\r\n        setSearchTerms(event.currentTarget.value)\r\n\r\n        props.refreshFunction(event.currentTarget.value)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Search\r\n                value={SearchTerms}\r\n                onChange={onChangeSearch}\r\n                placeholder=\"Название, ингридиенты\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchFeature\r\n","import React from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport slideOne from \"./1.png\"\r\nimport slideTwo from \"./2.png\"\r\n\r\nexport default () => (\r\n    <Carousel autoPlay showStatus={false} showThumbs={false} infiniteLoop={true}>\r\n        <div>\r\n            <img alt=\"asd\" src={slideOne} />\r\n        </div>\r\n        <div>\r\n            <img alt=\"asd\" src={slideTwo} />\r\n        </div>\r\n        {/* <div>\r\n            <img alt=\"\" src=\"https://images.dominos.by/media/dominos/sliders/ru/big/2020/04/06/%D1%81%D0%BB%D0%B0%D0%B9%D0%B4%D0%B5%D1%80_%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D0%B2%D0%BB%D1%8F%D0%B5%D0%BC_%D0%BF%D0%BE_%D0%B2%D1%81%D0%B5%D0%BC%D1%83_%D0%BC%D0%B8%D0%BD%D1%81%D0%BA%D1%83_1320%D1%85400_min_2.png\" />\r\n        </div> */}\r\n\r\n    </Carousel>\r\n);","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios';\r\nimport { Icon, Col, Card, Row } from 'antd';\r\nimport ImageSlider from '../../utils/ImageSlider';\r\nimport CheckBox from './Sections/CheckBox';\r\nimport RadioBox from './Sections/RadioBox';\r\nimport { continents, price } from './Sections/Datas';\r\nimport SearchFeature from './Sections/SearchFeature';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport Carousel from '../Carousel/Carousel'\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction LandingPage() {\r\n\r\n    const [Products, setProducts] = useState([])\r\n    const [Skip, setSkip] = useState(0)\r\n    const [Limit, setLimit] = useState(8)\r\n    const [PostSize, setPostSize] = useState()\r\n    const [SearchTerms, setSearchTerms] = useState(\"\")\r\n\r\n    const [Filters, setFilters] = useState({\r\n        continents: [],\r\n        price: []\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        const variables = {\r\n            skip: Skip,\r\n            limit: Limit,\r\n        }\r\n\r\n        getProducts(variables)\r\n\r\n    }, [])\r\n\r\n    const getProducts = (variables) => {\r\n\r\n        Axios.post('/api/product/getProducts', variables)\r\n            .then(response => {\r\n\r\n                if (response.data.success) {\r\n                    if (variables.loadMore) {\r\n                        setProducts([...Products, ...response.data.products])\r\n                    } else {\r\n                        setProducts(response.data.products)\r\n                    }\r\n                    setPostSize(response.data.postSize)\r\n                } else {\r\n                    alert('Failed to fectch product datas')\r\n                }\r\n            })\r\n    }\r\n\r\n    const onLoadMore = () => {\r\n\r\n        let skip = Skip + Limit;\r\n\r\n        const variables = {\r\n            skip: skip,\r\n            limit: Limit,\r\n            loadMore: true,\r\n            filters: Filters,\r\n            searchTerm: SearchTerms\r\n        }\r\n        getProducts(variables)\r\n        setSkip(skip)\r\n    }\r\n\r\n\r\n    const renderCards = Products.map((product, index) => {\r\n\r\n        return <Col lg={6} md={8} xs={24}>\r\n            <Card\r\n                hoverable={true}\r\n                cover={<a href={`/product/${product._id}`} > <ImageSlider images={product.images} /></a>}\r\n            >\r\n                <Meta\r\n                    title={product.title}\r\n                    description={`Цена: ${product.price} ₽`}\r\n                />\r\n            </Card>\r\n        </Col>\r\n    })\r\n\r\n\r\n    const showFilteredResults = (filters) => {\r\n\r\n        const variables = {\r\n            skip: 0,\r\n            limit: Limit,\r\n            filters: filters\r\n\r\n        }\r\n        getProducts(variables)\r\n        setSkip(0)\r\n\r\n    }\r\n\r\n    const handlePrice = (value) => {\r\n        const data = price;\r\n        let array = [];\r\n\r\n        for (let key in data) {\r\n\r\n            if (data[key]._id === parseInt(value, 10)) {\r\n                array = data[key].array;\r\n            }\r\n        }\r\n        console.log('array', array)\r\n        return array\r\n    }\r\n\r\n    const handleFilters = (filters, category) => {\r\n\r\n        const newFilters = { ...Filters }\r\n\r\n        newFilters[category] = filters\r\n\r\n        if (category === \"price\") {\r\n            let priceValues = handlePrice(filters)\r\n            newFilters[category] = priceValues\r\n\r\n        }\r\n\r\n        console.log(newFilters)\r\n\r\n        showFilteredResults(newFilters)\r\n        setFilters(newFilters)\r\n    }\r\n\r\n    const updateSearchTerms = (newSearchTerm) => {\r\n\r\n        const variables = {\r\n            skip: 0,\r\n            limit: Limit,\r\n            filters: Filters,\r\n            searchTerm: newSearchTerm\r\n        }\r\n\r\n        setSkip(0)\r\n        setSearchTerms(newSearchTerm)\r\n\r\n        getProducts(variables)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Carousel />\r\n            <div style={{ width: '75%', margin: '3rem auto' }}>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <h2>  Выбирай самую быструю пиццу  <Icon type=\"rocket\" />  </h2>\r\n                </div>\r\n\r\n\r\n                {/* Filter  */}\r\n\r\n                <Row gutter={[16, 16]}>\r\n                    <Col lg={12} xs={24} >\r\n                        <CheckBox\r\n                            list={continents}\r\n                            handleFilters={filters => handleFilters(filters, \"continents\")}\r\n                        />\r\n                    </Col>\r\n                    <Col lg={12} xs={24}>\r\n                        <RadioBox\r\n                            list={price}\r\n                            handleFilters={filters => handleFilters(filters, \"price\")}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                {/* Search  */}\r\n                <div style={{ display: 'flex', justifyContent: 'flex-end', margin: '1rem auto' }}>\r\n\r\n                    <SearchFeature\r\n                        refreshFunction={updateSearchTerms}\r\n                    />\r\n\r\n                </div>\r\n\r\n\r\n                {Products.length === 0 ?\r\n                    <div style={{ display: 'flex', height: '300px', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <h2>Пустота</h2>\r\n                    </div> :\r\n                    <div>\r\n                        <Row gutter={[16, 16]}>\r\n\r\n                            {renderCards}\r\n\r\n                        </Row>\r\n\r\n\r\n                    </div>\r\n                }\r\n                <br /><br />\r\n\r\n                {PostSize >= Limit &&\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <button onClick={onLoadMore}>Загрузить больше</button>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email недействителен')\r\n          .required('Введите email'),\r\n        password: Yup.string()\r\n          .min(6, 'Пароль должен больше 6 символов')\r\n          .required('Введите пароль'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Проверьте свою учетную запись или пароль еще раз')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Проверьте свою учетную запись или пароль еще раз')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Вход</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Ваш email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Ваш пароль\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                {/* <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Запомнить меня</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  Забыли пароль\r\n                  </a> */}\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Вход\r\n                </Button>\r\n                </div>\r\n                или <a href=\"/register\">Зарегистрироваться сейчас</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastName: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Введите Имя'),\r\n        lastName: Yup.string()\r\n          .required('Введите Фамилию'),\r\n        email: Yup.string()\r\n          .email('Email недействителен')\r\n          .required('Требуется электронная почта'),\r\n        password: Yup.string()\r\n          .min(6, 'Пароль должен содержать не менее 6 символов')\r\n          .required('Введите пароль'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Пароли должны совпадать')\r\n          .required('Подтвердите пароль')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit))\r\n            .then(response => {\r\n\r\n              if (response.payload.success) {\r\n                props.history.push(\"/login\");\r\n              } else {\r\n                alert(response.payload.err.errmsg)\r\n              }\r\n            })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Зарегистрироваться</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Имя\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Введите Имя\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Фамилия\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Введите Фамилию\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Введите Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Пароль\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Введите пароль\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Подтверждение\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Введите пароль еще раз\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Зарегистрироваться\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React from 'react';\r\nimport { Menu } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n      <Menu.Item key=\"mail\">\r\n        {/* <a href=\"/\">Главная</a> */}\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Menu, Icon, Badge, Divider, Typography } from 'antd';\r\nimport axios from 'axios';\r\nimport { USER_SERVER } from '../../../Config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Avatar } from 'antd';\r\n\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector(state => state.user)\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then(response => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert('Log Out Failed')\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">Вход</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">Зарегистрироваться</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n\r\n        <Menu mode={props.mode}>\r\n\r\n          <Menu.Item key=\"history\">\r\n            <a href=\"/history\">История покупок</a>\r\n          </Menu.Item>\r\n          {/* \r\n          <Menu.Item key=\"upload\">\r\n            <a href=\"/product/upload\">Добавление</a>\r\n          </Menu.Item> */}\r\n\r\n          <Menu.Item key=\"cart\" style={{ paddingBottom: 3 }}>\r\n            <Badge count={user.userData && user.userData.cart.length}>\r\n              <a href=\"/user/cart\" style={{ marginRight: -22, color: '#667777' }}>\r\n                <Icon type=\"shopping-cart\" style={{ fontSize: 30, marginBottom: 1 }} />\r\n              </a>\r\n            </Badge>\r\n          </Menu.Item>\r\n\r\n          {user && user.userData ? <Menu.Item className=\"user\" disabled='true' style={{ paddingBottom: 9 }}>{user.userData.name}</Menu.Item> : 0}\r\n          {/* {user && user.userData ? <Menu.Item className=\"user\" disabled='true' style={{ paddingBottom: 9 }}>{user.userData.}</Menu.Item> : 0} */}\r\n\r\n          <Menu.Item key=\"logout\">\r\n            <a onClick={logoutHandler}>Выйти</a>\r\n          </Menu.Item>\r\n        </Menu>\r\n\r\n\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(RightMenu);\r\n\r\n","import React, { useState } from 'react';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport { Drawer, Button, Icon } from 'antd';\r\nimport './Sections/Navbar.css';\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true)\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  };\r\n\r\n  return (\r\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/\">ReactPizza</a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Меню\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport { Icon } from 'antd';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{\r\n            height: '80px', display: 'flex',\r\n            flexDirection: 'column', alignItems: 'center',\r\n            justifyContent: 'center', fontSize: '1rem'\r\n        }}>\r\n            <p> ReactPizza самая быстрая пицца  <Icon type=\"smile\" /></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone';\r\nimport { Icon } from 'antd';\r\nimport Axios from 'axios';\r\nfunction FileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const onDrop = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n        //save the Image we chose inside the Node Server \r\n        Axios.post('/api/product/uploadImage', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n\r\n                    setImages([...Images, response.data.image])\r\n                    props.refreshFunction([...Images, response.data.image])\r\n\r\n                } else {\r\n                    alert('Failed to save the Image in Server')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const onDelete = (image) => {\r\n        const currentIndex = Images.indexOf(image);\r\n\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone\r\n                onDrop={onDrop}\r\n                multiple={false}\r\n                maxSize={800000000}\r\n            >\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div style={{\r\n                        width: '300px', height: '240px', border: '1px solid lightgray',\r\n                        display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                    }}\r\n                        {...getRootProps()}\r\n                    >\r\n                        {console.log('getRootProps', { ...getRootProps() })}\r\n                        {console.log('getInputProps', { ...getInputProps() })}\r\n                        <input {...getInputProps()} />\r\n                        <Icon type=\"plus\" style={{ fontSize: '3rem' }} />\r\n\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => onDelete(image)}>\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }} src={`http://localhost:5000/${image}`} alt={`productImg-${index}`} />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n","import React, { useState } from 'react'\r\nimport { Typography, Button, Form, message, Input, Icon } from 'antd';\r\nimport FileUpload from '../../utils/FileUpload'\r\nimport Axios from 'axios';\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { key: 1, value: \"Без грибов\" },\r\n    { key: 2, value: \"Без маслин\" },\r\n    { key: 3, value: \"Без лука\" },\r\n    { key: 4, value: \"Острая\" },\r\n    { key: 5, value: \"Новинки\" },\r\n    { key: 6, value: \"Хиты\" },\r\n    { key: 7, value: \"Комбо\" },\r\n    { key: 8, value: \"Напитки\" }\r\n]\r\n\r\n\r\n\r\nfunction UploadProductPage(props) {\r\n\r\n    const [TitleValue, setTitleValue] = useState(\"\")\r\n    const [DescriptionValue, setDescriptionValue] = useState(\"\")\r\n    const [PriceValue, setPriceValue] = useState(0)\r\n    const [ContinentValue, setContinentValue] = useState(1)\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n\r\n    const onTitleChange = (event) => {\r\n        setTitleValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onDescriptionChange = (event) => {\r\n        setDescriptionValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onPriceChange = (event) => {\r\n        setPriceValue(event.currentTarget.value)\r\n    }\r\n\r\n    const onContinentsSelectChange = (event) => {\r\n        setContinentValue(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        if (!TitleValue || !DescriptionValue || !PriceValue ||\r\n            !ContinentValue || !Images) {\r\n            return alert('fill all the fields first!')\r\n        }\r\n\r\n        const variables = {\r\n            writer: props.user.userData._id,\r\n            title: TitleValue,\r\n            description: DescriptionValue,\r\n            price: PriceValue,\r\n            images: Images,\r\n            continents: ContinentValue,\r\n        }\r\n\r\n        Axios.post('/api/product/uploadProduct', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('Product Successfully Uploaded')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('Failed to upload Product')\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <Title level={2}> Добавление продукта</Title>\r\n            </div>\r\n\r\n\r\n            <Form onSubmit={onSubmit} >\r\n\r\n                {/* DropZone */}\r\n                <FileUpload refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n                <label>Название</label>\r\n                <Input\r\n                    onChange={onTitleChange}\r\n                    value={TitleValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Описание</label>\r\n                <TextArea\r\n                    onChange={onDescriptionChange}\r\n                    value={DescriptionValue}\r\n                />\r\n                <br />\r\n                <br />\r\n                <label>Цена($)</label>\r\n                <Input\r\n                    onChange={onPriceChange}\r\n                    value={PriceValue}\r\n                    type=\"number\"\r\n                />\r\n                <br /><br />\r\n                <select onChange={onContinentsSelectChange} value={ContinentValue}>\r\n                    {Continents.map(item => (\r\n                        <option key={item.key} value={item.key}>{item.value} </option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n\r\n                <Button\r\n                    onClick={onSubmit}\r\n                >\r\n                    Submit\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProductPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductImage(props) {\r\n    const [Images, setImages] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (props.detail.images && props.detail.images.length > 0) {\r\n            let images = [];\r\n\r\n            props.detail.images && props.detail.images.map(item => {\r\n                images.push({\r\n                    original: `http://localhost:5000/${item}`,\r\n                    thumbnail: `http://localhost:5000/${item}`\r\n                })\r\n            })\r\n            setImages(images)\r\n        }\r\n    }, [props.detail])\r\n\r\n    return (\r\n        <div>\r\n            <ImageGallery items={Images} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductImage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Descriptions } from 'antd';\r\n\r\nfunction ProductInfo(props) {\r\n\r\n    const [Product, setProduct] = useState({})\r\n\r\n    useEffect(() => {\r\n\r\n        setProduct(props.detail)\r\n\r\n    }, [props.detail])\r\n\r\n    const addToCarthandler = () => {\r\n        props.addToCart(props.detail._id)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Descriptions title=\"Product Info\">\r\n                <Descriptions.Item label=\"Цена\"> {Product.price}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Продаж\">{Product.sold}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Обратная связь\"> Звоните по номеру 1488800</Descriptions.Item>\r\n                <Descriptions.Item label=\"Описание\"> {Product.description}</Descriptions.Item>\r\n            </Descriptions>\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Button size=\"large\" shape=\"round\" type=\"danger\"\r\n                    onClick={addToCarthandler}\r\n                >\r\n                    Добавить в корзину\r\n                    </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { Row, Col } from 'antd';\r\nimport ProductImage from './Sections/ProductImage';\r\nimport ProductInfo from './Sections/ProductInfo';\r\nimport { addToCart } from '../../../_actions/user_actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction DetailProductPage(props) {\r\n    const dispatch = useDispatch();\r\n    const productId = props.match.params.productId\r\n    const [Product, setProduct] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/api/product/products_by_id?id=${productId}&type=single`)\r\n            .then(response => {\r\n                setProduct(response.data[0])\r\n            })\r\n\r\n    }, [])\r\n\r\n    const addToCartHandler = (productId) => {\r\n        dispatch(addToCart(productId))\r\n    }\r\n\r\n    return (\r\n        <div className=\"postPage\" style={{ width: '100%', padding: '3rem 4rem' }}>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <h1>{Product.title}</h1>\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <Row gutter={[16, 16]} >\r\n                <Col lg={12} xs={24}>\r\n                    <ProductImage detail={Product} />\r\n                </Col>\r\n                <Col lg={12} xs={24}>\r\n                    <ProductInfo\r\n                        addToCart={addToCartHandler}\r\n                        detail={Product} />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailProductPage\r\n","import React from 'react'\r\n\r\nfunction UserCardBlock(props) {\r\n\r\n\r\n\r\n    const renderCartImage = (images) => {\r\n        if (images.length > 0) {\r\n            let image = images[0]\r\n            return `http://localhost:5000/${image}`\r\n        }\r\n    }\r\n\r\n    const renderItems = () => (\r\n        props.products && props.products.map(product => (\r\n            <tr key={product._id}>\r\n                <td>\r\n                    <img style={{ width: '70px' }} alt=\"product\"\r\n                        src={renderCartImage(product.images)} />\r\n                    <p style={{ paddingLeft: '10px' }}>{product.title}</p>\r\n                </td>\r\n                <td>{product.quantity} шт</td>\r\n                <td> {product.price} </td>\r\n                <td><button\r\n                    onClick={() => props.removeItem(product._id)}\r\n                >Удалить</button> </td>\r\n            </tr>\r\n        ))\r\n    )\r\n\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Название</th>\r\n                        <th>Количество</th>\r\n                        <th>Цена ₽</th>\r\n                        <th>Удаление</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderItems()}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCardBlock\r\n","import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n\r\nexport default class Paypal extends React.Component {\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n            console.log(\"The payment was succeeded!\", payment);\r\n            // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n            this.props.onSuccess(payment);\r\n\r\n        }\r\n\r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n\r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n\r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'RUB'; // or you can set this value from your props or state\r\n        let total = this.props.toPay; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n        const client = {\r\n            sandbox: 'AelMA7rUdxce2INjEX1y9KQ47L4J8Idv7rIROe3if2vnMqsIkIz5FFUvA5g-cZiRCnRl3X2EAZljDxWw',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n\r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        return (\r\n            <PaypalExpressBtn\r\n                env={env}\r\n                client={client}\r\n                currency={currency}\r\n                total={total}\r\n                onError={onError}\r\n                onSuccess={onSuccess}\r\n                onCancel={onCancel}\r\n                style={{\r\n                    size: 'large',\r\n                    color: 'blue',\r\n                    shape: 'rect',\r\n                    label: 'checkout'\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    getCartItems,\r\n    removeCartItem,\r\n    onSuccessBuy\r\n} from '../../../_actions/user_actions';\r\nimport UserCardBlock from './Sections/UserCardBlock';\r\nimport { Result, Empty } from 'antd';\r\nimport Axios from 'axios';\r\nimport Paypal from '../../utils/Paypal';\r\n\r\n\r\nfunction CartPage(props) {\r\n    const dispatch = useDispatch();\r\n    const [Total, setTotal] = useState(0)\r\n    const [ShowTotal, setShowTotal] = useState(false)\r\n    const [ShowSuccess, setShowSuccess] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        let cartItems = [];\r\n        if (props.user.userData && props.user.userData.cart) {\r\n            if (props.user.userData.cart.length > 0) {\r\n                props.user.userData.cart.forEach(item => {\r\n                    cartItems.push(item.id)\r\n                });\r\n                dispatch(getCartItems(cartItems, props.user.userData.cart))\r\n                    .then((response) => {\r\n                        if (response.payload.length > 0) {\r\n                            calculateTotal(response.payload)\r\n                        }\r\n                    })\r\n            }\r\n        }\r\n\r\n    }, [props.user.userData])\r\n\r\n    const calculateTotal = (cartDetail) => {\r\n        let total = 0;\r\n\r\n        cartDetail.map(item => {\r\n            total += Number(item.price, 10) * item.quantity\r\n        });\r\n\r\n        setTotal(total)\r\n        setShowTotal(true)\r\n    }\r\n\r\n\r\n    const removeFromCart = (productId) => {\r\n\r\n        dispatch(removeCartItem(productId))\r\n            .then((response) => {\r\n                if (response.payload.cartDetail.length <= 0) {\r\n                    setShowTotal(false)\r\n                } else {\r\n                    calculateTotal(response.payload.cartDetail)\r\n                }\r\n            })\r\n    }\r\n\r\n    const transactionSuccess = (data) => {\r\n        dispatch(onSuccessBuy({\r\n            cartDetail: props.user.cartDetail,\r\n            paymentData: data\r\n        }))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    setShowSuccess(true)\r\n                    setShowTotal(false)\r\n                }\r\n            })\r\n    }\r\n\r\n    const transactionError = () => {\r\n        console.log('Paypal error')\r\n    }\r\n\r\n    const transactionCanceled = () => {\r\n        console.log('Transaction canceled')\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <h1>Корзина</h1>\r\n            <div>\r\n\r\n                <UserCardBlock\r\n                    products={props.user.cartDetail}\r\n                    removeItem={removeFromCart}\r\n                />\r\n\r\n\r\n                {ShowTotal ?\r\n                    <div style={{ marginTop: '3rem' }}>\r\n                        <h2>Ваш заказ на сумму: {Total} ₽</h2>\r\n                    </div>\r\n                    :\r\n                    ShowSuccess ?\r\n                        <Result\r\n                            status=\"success\"\r\n                            title=\"Спасибо за покупку\"\r\n                        /> :\r\n                        <div style={{\r\n                            width: '100%', display: 'flex', flexDirection: 'column',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <br />\r\n                            <Empty description={false} />\r\n                            <p>Козина пустая</p>\r\n\r\n                        </div>\r\n                }\r\n            </div>\r\n\r\n\r\n\r\n            {/* Paypal Button */}\r\n\r\n            {ShowTotal &&\r\n\r\n                <Paypal\r\n                    toPay={Total}\r\n                    onSuccess={transactionSuccess}\r\n                    transactionError={transactionError}\r\n                    transactionCanceled={transactionCanceled}\r\n                />\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage\r\n","import React from 'react'\r\n\r\nfunction HistoryPage(props) {\r\n\r\n    return (\r\n        <div style={{ width: '80%', margin: '3rem auto' }}>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <h1>История</h1>\r\n            </div>\r\n            <br />\r\n\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Название продукта</th>\r\n                        <th>Цена</th>\r\n                        <th>Количество</th>\r\n                        {/* <th>Date of Purchase</th> */}\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n\r\n                    {props.user.userData && props.user.userData.history &&\r\n                        props.user.userData.history.map(item => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.price}</td>\r\n                                <td>{item.quantity}</td>\r\n                                {/* <td>{item.dateOfPurchase}</td> */}\r\n                            </tr>\r\n                        ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HistoryPage\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\"\r\nimport UploadProductPage from './views/UploadProductPage/UploadProductPage'\r\nimport DetailProductPage from './views/DetailProductPage/DetailProductPage';\r\nimport CartPage from './views/CartPage/CartPage';\r\nimport HistoryPage from './views/HistoryPage/HistoryPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: '75px', minHeight: 'calc(100vh - 80px)' }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route exact path=\"/product/upload\" component={Auth(UploadProductPage, true)} />\r\n          <Route exact path=\"/product/:productId\" component={Auth(DetailProductPage, null)} />\r\n          <Route exact path=\"/user/cart\" component={Auth(CartPage, true)} />\r\n          <Route exact path=\"/history\" component={Auth(HistoryPage, true)} />\r\n\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    ADD_TO_CART_USER,\r\n    GET_CART_ITEMS_USER,\r\n    REMOVE_CART_ITEM_USER,\r\n    ON_SUCCESS_BUY_USER\r\n} from '../_actions/types';\r\n\r\nconst initialSatte = {\r\n\r\n}\r\n\r\n\r\nexport default function (state = initialSatte, action) {\r\n    switch (action.type) {\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return { ...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return { ...state }\r\n        case ADD_TO_CART_USER:\r\n            return {\r\n                ...state, userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload\r\n                }\r\n            }\r\n        case GET_CART_ITEMS_USER:\r\n            return {\r\n                ...state, cartDetail: action.payload\r\n            }\r\n        case REMOVE_CART_ITEM_USER:\r\n            return {\r\n                ...state,\r\n                cartDetail: action.payload.cartDetail,\r\n                userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload.cart\r\n                }\r\n\r\n            }\r\n        case ON_SUCCESS_BUY_USER:\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    cart: action.payload.cart\r\n                },\r\n                cartDetail: action.payload.cartDetail\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}